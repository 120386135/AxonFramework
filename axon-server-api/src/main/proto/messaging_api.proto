syntax = "proto3";
package io.axoniq.axonhub.grpc;
import "common.proto";
import "messaging_messages.proto";

option java_multiple_files = true;



service QueryService {
    rpc OpenStream (stream QueryProviderOutbound) returns (stream QueryProviderInbound) {}
    rpc Query (QueryRequest) returns (stream QueryResponse) {}
    rpc Subscription (stream SubscriptionQueryRequest) returns (stream SubscriptionQueryResponse){}
}



message QueryProviderOutbound {
    oneof request {
        QuerySubscription subscribe = 1;
        QuerySubscription unsubscribe = 2;
        io.axoniq.axonserver.grpc.FlowControl flowControl = 3;
        QueryResponse queryResponse = 4;
        QueryComplete queryComplete = 5;
        SubscriptionQueryResponse subscription_query_response = 6;
    }
}



message QueryProviderInbound {
    oneof request {
        io.axoniq.axonserver.grpc.Confirmation confirmation = 1;
        QueryRequest query = 2;
        SubscriptionQueryRequest subscription_query_request = 3;
    }
}



message QueryComplete {
    string message_id = 1;
    string request_id = 2;
}

message NodeNotification {
    string host_name = 1;
    int32 grpc_port = 2;
    int32 http_port = 3;
    int32 version = 4;
    NodeEvent event_type = 5;
}

enum NodeEvent {
    ADD = 0;
    DELETE = 1;
}


